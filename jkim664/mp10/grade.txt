Compilation Results:
********************

load_tuples test: 10 pts total
Test 1: load tuple
+5: load_tuples: m,n,nnz match
+5: load_tuples: nodes match

gv_tuples test: 5 pts total
Test 2: gv
+5: gv_tuples

set_tuples test: 35 pts total

add_tuples test: 10 pts total
Test 4: add
 nz doesn't match

mult_tuples test: 15 pts total
Test 5: mult
 +15: mult_tuples pass

save_tuples test: 10 pts total
Test 6: save
testing save_tuples, saving to save_test_tuples.txt

Printing diff of save tuples. If empty, 10 pts

10
destroy_tuples test: 5 pts total
Printing valgrind output. If no memory leaks/errors, 5 pts
==8832== Memcheck, a memory error detector
==8832== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==8832== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==8832== Command: ./test0 7
==8832== 
==8832== Conditional jump or move depends on uninitialised value(s)
==8832==    at 0x401B1B: gv_tuples (sparsemat.c:183)
==8832==    by 0x401ECC: add_tuples (sparsemat.c:325)
==8832==    by 0x4010D3: main (test0.c:410)
==8832== 
==8832== Conditional jump or move depends on uninitialised value(s)
==8832==    at 0x401BE0: set_tuples (sparsemat.c:222)
==8832==    by 0x401F20: add_tuples (sparsemat.c:329)
==8832==    by 0x4010D3: main (test0.c:410)
==8832== 
==8832== Conditional jump or move depends on uninitialised value(s)
==8832==    at 0x401C70: set_tuples (sparsemat.c:236)
==8832==    by 0x401F20: add_tuples (sparsemat.c:329)
==8832==    by 0x4010D3: main (test0.c:410)
==8832== 
==8832== Conditional jump or move depends on uninitialised value(s)
==8832==    at 0x40176E: recurse (sparsemat.c:26)
==8832==    by 0x401CE0: set_tuples (sparsemat.c:259)
==8832==    by 0x401F20: add_tuples (sparsemat.c:329)
==8832==    by 0x4010D3: main (test0.c:410)
==8832== 
==8832== Conditional jump or move depends on uninitialised value(s)
==8832==    at 0x4016E2: recurse (sparsemat.c:14)
==8832==    by 0x4017BD: recurse (sparsemat.c:46)
==8832==    by 0x401CE0: set_tuples (sparsemat.c:259)
==8832==    by 0x401F20: add_tuples (sparsemat.c:329)
==8832==    by 0x4010D3: main (test0.c:410)
==8832== 
==8832== Conditional jump or move depends on uninitialised value(s)
==8832==    at 0x40176E: recurse (sparsemat.c:26)
==8832==    by 0x4017BD: recurse (sparsemat.c:46)
==8832==    by 0x401CE0: set_tuples (sparsemat.c:259)
==8832==    by 0x401F20: add_tuples (sparsemat.c:329)
==8832==    by 0x4010D3: main (test0.c:410)
==8832== 
==8832== Conditional jump or move depends on uninitialised value(s)
==8832==    at 0x4016E2: recurse (sparsemat.c:14)
==8832==    by 0x4017BD: recurse (sparsemat.c:46)
==8832==    by 0x4017BD: recurse (sparsemat.c:46)
==8832==    by 0x401CE0: set_tuples (sparsemat.c:259)
==8832==    by 0x401F20: add_tuples (sparsemat.c:329)
==8832==    by 0x4010D3: main (test0.c:410)
==8832== 
==8832== Conditional jump or move depends on uninitialised value(s)
==8832==    at 0x40176E: recurse (sparsemat.c:26)
==8832==    by 0x4017BD: recurse (sparsemat.c:46)
==8832==    by 0x4017BD: recurse (sparsemat.c:46)
==8832==    by 0x401CE0: set_tuples (sparsemat.c:259)
==8832==    by 0x401F20: add_tuples (sparsemat.c:329)
==8832==    by 0x4010D3: main (test0.c:410)
==8832== 
==8832== Conditional jump or move depends on uninitialised value(s)
==8832==    at 0x4016E2: recurse (sparsemat.c:14)
==8832==    by 0x4017BD: recurse (sparsemat.c:46)
==8832==    by 0x4017BD: recurse (sparsemat.c:46)
==8832==    by 0x4017BD: recurse (sparsemat.c:46)
==8832==    by 0x401CE0: set_tuples (sparsemat.c:259)
==8832==    by 0x401F20: add_tuples (sparsemat.c:329)
==8832==    by 0x4010D3: main (test0.c:410)
==8832== 
==8832== Conditional jump or move depends on uninitialised value(s)
==8832==    at 0x40176E: recurse (sparsemat.c:26)
==8832==    by 0x4017BD: recurse (sparsemat.c:46)
==8832==    by 0x4017BD: recurse (sparsemat.c:46)
==8832==    by 0x4017BD: recurse (sparsemat.c:46)
==8832==    by 0x401CE0: set_tuples (sparsemat.c:259)
==8832==    by 0x401F20: add_tuples (sparsemat.c:329)
==8832==    by 0x4010D3: main (test0.c:410)
==8832== 
==8832== Conditional jump or move depends on uninitialised value(s)
==8832==    at 0x401F6F: add_tuples (sparsemat.c:338)
==8832==    by 0x4010D3: main (test0.c:410)
==8832== 
==8832== 
==8832== HEAP SUMMARY:
==8832==     in use at exit: 1,368 bytes in 57 blocks
==8832==   total heap usage: 65 allocs, 8 frees, 2,648 bytes allocated
==8832== 
==8832== LEAK SUMMARY:
==8832==    definitely lost: 72 bytes in 3 blocks
==8832==    indirectly lost: 1,296 bytes in 54 blocks
==8832==      possibly lost: 0 bytes in 0 blocks
==8832==    still reachable: 0 bytes in 0 blocks
==8832==         suppressed: 0 bytes in 0 blocks
==8832== Rerun with --leak-check=full to see details of leaked memory
==8832== 
==8832== For counts of detected and suppressed errors, rerun with: -v
==8832== Use --track-origins=yes to see where uninitialised values come from
==8832== ERROR SUMMARY: 250 errors from 11 contexts (suppressed: 1 from 1)

Grade:
******
Late submission: 8
Functionality: 40
Comments and Style:  5 
 Intro paragraph:  5 
Total: 42
